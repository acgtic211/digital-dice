apiVersion: v1
kind: Secret
metadata:
  name: googlemaps-secret
type: Opaque
data:
  GOOGLE_MAPS_API_KEY: QUl6YVN5QkpHRHBZd3R4Z3dOQXpqYmZlZHV1d01VUVB0eEpYLUlN
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: containers-config
data:
  PORT: "443"
  EH: "https://dd-garbage-containers-eh-entrypoint"
  DH: "https://dd-garbage-containers-dh-entrypoint"
  VIRTUALIZER: "https://dd-garbage-containers-virtualizer-entrypoint"
  DB_NAME: "virtual-interactions"
  DB_USER: "virtual-user"
  DB_PASS: "123456virtual"
  DB_NAME_TI: "dd-db"
  DB_USER_TI: "dd_admin"
  DB_PASS_TI: "123456admin"
  DB_URI: "mongodb://mongo-0.mongo-headless.default:27017,mongo-1.mongo-headless.default:27017,mongo-2.mongo-headless.default:27017/"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dd-garbage-containers-controller
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dd-garbage-containers-controller
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '443'
      labels:
        app: dd-garbage-containers-controller
    spec:
      containers:
      - name: dd-garbage-containers-controller
        image: dd-garbage-containers-controller:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
        envFrom:
          - configMapRef:
              name: containers-config
        volumeMounts:
          - name: tls-containers
            mountPath: "/app/certs"
            readOnly: true
      volumes:
          - name: tls-containers
            secret:
              secretName: tls-containers
---
apiVersion: v1
kind: Service
metadata:
  name: dd-garbage-containers-controller-entrypoint
spec:
  type: NodePort
  selector:
    app: dd-garbage-containers-controller
  ports:
  - port: 443
    targetPort: 443
    nodePort: 30001
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dd-garbage-containers-dh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dd-garbage-containers-dh
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '443'
      labels:
        app: dd-garbage-containers-dh
    spec:
      containers:
      - name: dd-garbage-containers-dh
        image: dd-garbage-containers-dh:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
        envFrom:
          - configMapRef:
              name: containers-config
        volumeMounts:
          - name: tls-containers
            mountPath: "/app/certs"
            readOnly: true
      volumes:
          - name: tls-containers
            secret:
              secretName: tls-containers
---
apiVersion: v1
kind: Service
metadata:
  name: dd-garbage-containers-dh-entrypoint
spec:
  selector:
    app: dd-garbage-containers-dh
  ports:
  - protocol: TCP
    port: 443
    targetPort: 443
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dd-garbage-containers-eh
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dd-garbage-containers-eh
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '443'
      labels:
        app: dd-garbage-containers-eh
    spec:
      containers:
      - name: dd-garbage-containers-eh
        image: dd-garbage-containers-eh:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
        envFrom:
          - configMapRef:
              name: containers-config
        volumeMounts:
          - name: tls-containers
            mountPath: "/app/certs"
            readOnly: true
      volumes:
          - name: tls-containers
            secret:
              secretName: tls-containers
---
apiVersion: v1
kind: Service
metadata:
  name: dd-garbage-containers-eh-entrypoint
spec:
  selector:
    app: dd-garbage-containers-eh
  ports:
  - protocol: TCP
    port: 443
    targetPort: 443
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dd-garbage-containers-reflection
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dd-garbage-containers-reflection
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '443'
      labels:
        app: dd-garbage-containers-reflection
    spec:
      containers:
      - name: dd-garbage-containers-reflection
        image: dd-garbage-containers-reflection:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
        envFrom:
          - configMapRef:
              name: containers-config
        volumeMounts:
          - name: tls-containers
            mountPath: "/app/certs"
            readOnly: true
      volumes:
          - name: tls-containers
            secret:
              secretName: tls-containers
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: dd-garbage-containers-virtualizer
spec:
  replicas: 1
  selector:
    matchLabels:
      app: dd-garbage-containers-virtualizer
  template:
    metadata:
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: /metrics
        prometheus.io/port: '443'
      labels:
        app: dd-garbage-containers-virtualizer
    spec:
      containers:
      - name: dd-garbage-containers-virtualizer
        image: dd-garbage-containers-virtualizer:latest
        imagePullPolicy: IfNotPresent
        resources:
          limits:
            cpu: 100m
        env:
          - name: GOOGLE_MAPS_API_KEY
            valueFrom:
              secretKeyRef:
                name: googlemaps-secret
                key: GOOGLE_MAPS_API_KEY
        envFrom:
          - configMapRef:
              name: containers-config
        volumeMounts:
          - name: tls-containers
            mountPath: "/app/certs"
            readOnly: true
      volumes:
          - name: tls-containers
            secret:
              secretName: tls-containers
---
apiVersion: v1
kind: Service
metadata:
  name: dd-garbage-containers-virtualizer-entrypoint
spec:
  selector:
    app: dd-garbage-containers-virtualizer
  ports:
  - protocol: TCP
    port: 443
    targetPort: 443
  type: ClusterIP
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dd-garbage-containers-controller
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dd-garbage-containers-controller
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: dd-garbage-containers-dh
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: dd-garbage-containers-dh
  minReplicas: 1
  maxReplicas: 5
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
